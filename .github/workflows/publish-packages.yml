name: Publish to Package Managers

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true

permissions:
  contents: write
  packages: write

jobs:
  publish-homebrew:
    name: Update Homebrew Tap
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Update Homebrew formula
      run: |
        # Update version in the formula
        sed -i "s/version \".*\"/version \"${{ steps.version.outputs.VERSION }}\"/" packaging/homebrew/aws-assume-role.rb
        
        # Update URLs and checksums for new version
        MACOS_URL="https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/aws-assume-role-macos-x86_64"
        LINUX_URL="https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/aws-assume-role-linux-x86_64"
        
        # Download binaries to calculate checksums
        curl -L -o macos-binary "$MACOS_URL"
        curl -L -o linux-binary "$LINUX_URL"
        
        MACOS_SHA256=$(sha256sum macos-binary | cut -d' ' -f1)
        LINUX_SHA256=$(sha256sum linux-binary | cut -d' ' -f1)
        
        # Update formula with new checksums
        sed -i "s|url \".*macos.*\"|url \"$MACOS_URL\"|" packaging/homebrew/aws-assume-role.rb
        sed -i "s|url \".*linux.*\"|url \"$LINUX_URL\"|" packaging/homebrew/aws-assume-role.rb
        sed -i "s/sha256 \".*\" # macos/sha256 \"$MACOS_SHA256\" # macos/" packaging/homebrew/aws-assume-role.rb
        sed -i "s/sha256 \".*\" # linux/sha256 \"$LINUX_SHA256\" # linux/" packaging/homebrew/aws-assume-role.rb
    
    - name: Create homebrew-tap repository if not exists
      run: |
        # Check if tap repository exists
        if ! gh repo view holdennguyen/homebrew-tap >/dev/null 2>&1; then
          echo "Creating homebrew-tap repository..."
          gh repo create holdennguyen/homebrew-tap --public --description "Homebrew tap for AWS Assume Role CLI"
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Update Homebrew tap
      run: |
        # Clone or update the tap repository
        git clone https://github.com/holdennguyen/homebrew-tap.git tap-repo
        cd tap-repo
        
        # Configure git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Create Formula directory if it doesn't exist
        mkdir -p Formula
        
        # Copy updated formula
        cp ../packaging/homebrew/aws-assume-role.rb Formula/
        
        # Commit and push
        git add Formula/aws-assume-role.rb
        git commit -m "Update aws-assume-role to v${{ steps.version.outputs.VERSION }}" || echo "No changes to commit"
        git push
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-ppa:
    name: Publish to Launchpad PPA
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y devscripts build-essential dh-make debhelper dput-ng
    
    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Download Linux binary
      run: |
        curl -L -o aws-assume-role-linux \
          "https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/aws-assume-role-linux-x86_64"
        chmod +x aws-assume-role-linux
    
    - name: Prepare source package
      run: |
        # Create source package directory
        mkdir -p aws-assume-role-${{ steps.version.outputs.VERSION }}
        cd aws-assume-role-${{ steps.version.outputs.VERSION }}
        
        # Create debian directory structure
        mkdir -p debian/source
        
        # Copy control files
        cp ../packaging/apt/DEBIAN/control debian/
        cp ../packaging/apt/DEBIAN/postinst debian/
        cp ../packaging/apt/DEBIAN/prerm debian/
        
        # Create additional debian files
        echo "3.0 (quilt)" > debian/source/format
        
        # Create changelog
        cat > debian/changelog << EOF
        aws-assume-role (${{ steps.version.outputs.VERSION }}-1) jammy; urgency=medium
        
          * New upstream release v${{ steps.version.outputs.VERSION }}
          * Prerequisites verification system
          * Enhanced CLI help and examples
          * Improved troubleshooting
        
         -- Hung, Nguyen Minh <holdennguyen6174@gmail.com>  $(date -R)
        EOF
        
        # Create rules file
        cat > debian/rules << 'EOF'
        #!/usr/bin/make -f
        %:
        	dh $@
        
        override_dh_auto_build:
        	# Binary is pre-built
        
        override_dh_auto_install:
        	mkdir -p debian/aws-assume-role/usr/bin
        	cp ../aws-assume-role-linux debian/aws-assume-role/usr/bin/aws-assume-role
        	chmod +x debian/aws-assume-role/usr/bin/aws-assume-role
        EOF
        chmod +x debian/rules
        
        # Create compat file
        echo "13" > debian/compat
        
        # Create copyright file
        cat > debian/copyright << EOF
        Format: https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
        Upstream-Name: aws-assume-role
        Source: https://github.com/holdennguyen/aws-assume-role
        
        Files: *
        Copyright: 2025 Hung, Nguyen Minh <holdennguyen6174@gmail.com>
        License: MIT
        EOF
    
    - name: Import GPG key
      run: |
        echo "${{ secrets.PPA_GPG_PRIVATE_KEY }}" | gpg --import
        echo "${{ secrets.PPA_GPG_PASSPHRASE }}" | gpg --batch --yes --passphrase-fd 0 --trust-model always --sign-key holdennguyen6174@gmail.com
      env:
        GPG_TTY: $(tty)
    
    - name: Build and upload source package
      run: |
        cd aws-assume-role-${{ steps.version.outputs.VERSION }}
        
        # Build source package
        debuild -S -sa -k"holdennguyen6174@gmail.com"
        
        # Upload to PPA
        cd ..
        dput ppa:holdennguyen/aws-assume-role aws-assume-role_${{ steps.version.outputs.VERSION }}-1_source.changes
      env:
        DEBFULLNAME: "Hung, Nguyen Minh"
        DEBEMAIL: "holdennguyen6174@gmail.com"

  publish-copr:
    name: Publish to COPR (YUM/DNF)
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install copr-cli
      run: |
        sudo dnf install -y copr-cli || sudo apt-get update && sudo apt-get install -y python3-pip && pip3 install copr-cli
    
    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Configure COPR
      run: |
        mkdir -p ~/.config
        echo "${{ secrets.COPR_CONFIG }}" > ~/.config/copr
    
    - name: Update RPM spec version
      run: |
        sed -i "s/Version:.*/Version: ${{ steps.version.outputs.VERSION }}/" packaging/rpm/aws-assume-role.spec
    
    - name: Build COPR package
      run: |
        # Create COPR project if it doesn't exist
        copr-cli create aws-assume-role --chroot fedora-39-x86_64 --chroot fedora-38-x86_64 --chroot epel-9-x86_64 || true
        
        # Build package
        copr-cli build aws-assume-role packaging/rpm/aws-assume-role.spec \
          --nowait \
          --chroot fedora-39-x86_64 \
          --chroot fedora-38-x86_64 \
          --chroot epel-9-x86_64

  update-documentation:
    name: Update installation documentation
    runs-on: ubuntu-latest
    needs: [publish-homebrew, publish-ppa, publish-copr]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Update README with package manager commands
      run: |
        # Update installation section in README
        sed -i '/^### Package Managers/,/^### Manual Installation/c\
        ### Package Managers (Recommended)\
        \
        **🍺 Homebrew (macOS/Linux)**\
        ```bash\
        brew tap holdennguyen/tap\
        brew install aws-assume-role\
        ```\
        \
        **📦 APT (Debian/Ubuntu)**\
        ```bash\
        sudo add-apt-repository ppa:holdennguyen/aws-assume-role\
        sudo apt update\
        sudo apt install aws-assume-role\
        ```\
        \
        **📦 DNF/YUM (Fedora/CentOS/RHEL)**\
        ```bash\
        # Fedora\
        sudo dnf copr enable holdennguyen/aws-assume-role\
        sudo dnf install aws-assume-role\
        \
        # CentOS/RHEL\
        sudo yum copr enable holdennguyen/aws-assume-role\
        sudo yum install aws-assume-role\
        ```\
        \
        **🦀 Cargo (Rust)**\
        ```bash\
        cargo install aws-assume-role\
        ```\
        \
        ### Manual Installation' README.md
    
    - name: Commit documentation updates
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add README.md
        git commit -m "📚 Update installation commands for v${{ steps.version.outputs.VERSION }}" || echo "No changes to commit"
        git push 